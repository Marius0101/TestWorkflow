name: Create Bugfix Branch and PR

on:
  workflow_dispatch:
    inputs:
        Ticket_ID:
            description: 'Ticket number'
            required: true
            type: string

jobs:
  create-bugfix:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Create bugfix branch
      id: set_branch_name
      run: |
        BRANCH_NAME="bugfix/${{ inputs.Ticket_ID }}-Create-files"
        git checkout -b "$BRANCH_NAME"
        git push --set-upstream origin "$BRANCH_NAME"
        echo "::set-output name=branch_name::$BRANCH_NAME"
    - name: Create bugfix branch
      run: |
        echo "${{ steps.set_branch_name.outputs.branch_name }}"

    - name: Create some changes
      run: ./make-files.sh
    
    - name: Configure Git user as workflow actor
      run: |
        git config --local user.name "${{ secrets.BOT }}"
        git config --local user.email "${{ secrets.BOT }}@users.noreply.github.com"

    - name: Commit and push
      run: |
        git add -A
        git commit -m "Add files"
        git push

    - name: Create Pull Request using GitHub API
      run: |
        PR_RESPONSE=$(curl -X POST \
        -H "Authorization: token ${{ secrets.TOKEN }}" \
        -H "Accept: application/vnd.github.v3+json" \
        https://api.github.com/repos/${{ github.repository }}/pulls \
        -d '{
          "title": "Merge release branch into develop",
          "head": "'"${{ steps.set_branch_name.outputs.branch_name }}"'",
          "base": "develop",
          "body": "This PR merges changes from release branch into develop.",
          "maintainer_can_modify": true
        }')
        PR_NUMBER=$(echo "$PR_RESPONSE" | jq -r '.number')
        echo $PR_NUMBER
        echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV


    - name: Assign PR to a specific user
      run: |
        curl -X PATCH \
          -H "Authorization: token ${{ secrets.TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/issues/${{ env.PR_NUMBER }} \
          -d '{
            "assignees": ["${{ github.actor }}"]
          }'

    - name: Request reviewrs
      run: |
        curl -X PATCH \
          -H "Authorization: token ${{ secrets.TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/pulls/${{ env.PR_NUMBER }}/requested_reviewers \
          -d '{
            "reviewers": ["${{ secrets.BOT }}"]
          }'
      